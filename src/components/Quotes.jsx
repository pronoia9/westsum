// The MIT License (MIT)

// Copyright (c) 2023 neil kalman (https://codepen.io/thatkookooguy/pen/VPJpaW)

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

import styled, { css, keyframes } from 'styled-components';

import { kanyemojis } from '../utils/data';

export default function Quotes({ quotes }) {
  return (
    <DivTrain1>
      <DivTrain2>
        <DivTrain3>
          <DivTrain4>
            {quotes?.map((q, index) => (
              <Bubble key={`${q}-${new Date().getTime()}-${index}`} img={kanyemojis[index]} index={index} className={index % 2 ? 'left' : 'right'}>
                {q}
              </Bubble>
            ))}
          </DivTrain4>
        </DivTrain3>
      </DivTrain2>
    </DivTrain1>
  );
}

const showBubble = keyframes`
/* ----------------------------------------------
 * Generated by Animista on 2023-6-5 19:13:39
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation bounce-in-fwd
 * ----------------------------------------
 */
  0% {
    -webkit-transform: scale(0);
    transform: scale(0);
    -webkit-animation-timing-function: ease-in;
    animation-timing-function: ease-in;
    opacity: 0;
  }
  38% {
    -webkit-transform: scale(1);
    transform: scale(1);
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
    opacity: 1;
  }
  95% {
    -webkit-transform: scale(0.95);
    transform: scale(0.95);
    -webkit-animation-timing-function: ease-in;
    animation-timing-function: ease-in;
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
  }
`;

const DivTrain1 = styled.div`
  padding: 0 0 5em;

  @media (min-width: 992px) {
    padding: 5.5em 0 6.5em;
  }
`;

const DivTrain2 = styled.div`
  box-sizing: border-box;
  margin-left: auto;
  margin-right: auto;
  max-width: 1140px;
  padding-left: 15px;
  padding-right: 15px;
`;

const DivTrain3 = styled.div`
  box-sizing: border-box;
  margin-left: -15px;
  margin-right: -15px;

  &::after {
    clear: both;
    content: '';
    display: table;
  }
`;

const DivTrain4 = styled.div`
  float: left;
  box-sizing: border-box;
  min-height: 1px;
  padding: 0 15px;
  margin: 0;
  width: 100%;

  @media (min-width: 992px) {
    width: 66.66667%;
    padding-left: 15px;
    padding-right: 15px;
    position: relative;
    margin-left: 16.66667%;
  }

  @media (min-width: 992px) {
    p {
      font-size: 20px;
      line-height: 150%;
    }
  }
`;

const Bubble = styled.p`
  position: relative;
  clear: both;
  display: inline-block;
  max-width: 50%;
  padding: 14px;
  margin: 0 0 50px 0;
  border-radius: 10px;
  background-color: ${({ theme }) => theme.chatBubble};
  /* font: 12px/16px 'Noto Sans', sans-serif; */
  color: ${({ theme }) => theme.chatFont};
  font-size: 20px;
  line-height: 150%;
  word-wrap: break-word;
  ${(props) => css`
    animation: ${showBubble} 1.1s ${props.index * 0.25}s both;
  `}

  &:before {
    position: absolute;
    top: -10px;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    content: '';
    background-size: cover;
    background-image: url(${(props) => props.img});
  }

  &:after {
    position: absolute;
    top: 10px;
    content: '';
    width: 0;
    height: 0;
    border-top: 10px solid ${({ theme }) => theme.chatBubble};
  }

  &.right {
    float: right;
    margin-right: 65px;

    &:before {
      right: -65px;
    }

    &:after {
      border-right: 10px solid transparent;
      right: -10px;
    }
  }

  &.left {
    float: left;
    margin-left: 65px;

    &:before {
      left: -65px;
    }

    &:after {
      border-left: 10px solid transparent;
      left: -10px;
    }
  }
`;
